@page "/"
@inject HttpClient Http
@using Warehouse.Client.Models;
@using Warehouse.Client.Shared

<PageTitle>Products</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Products</MudText>
@if (products == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="products" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ProductDto, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDto, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDto, object>(x=>x.Category)">Category</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDto, object>(x=>x.Quantity)">Quantity</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDto, object>(x=>x.Price)">Price</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Category">@context.Category</MudTd>
            <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
            <MudTd DataLabel="PLN">@context.Price</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 25}" />
        </PagerContent>
    </MudTable>
}


@code {
    private ProductDto[] products;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await Http.GetFromJsonAsync<ProductDto[]>("products");

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }
}
